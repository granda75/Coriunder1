 private void SilentPostCharge(TransactionsData data)
        {
            string refTransID = "1234";

            //------------- building url string to send
            String sendStr;
            sendStr = "https://process.coriunder.cloud/member/remote_charge.asp?";
            sendStr += "CompanyNum=" + HttpUtility.UrlEncode(data.CompanyNumber) + "&";
            //sendStr += "TransType=" + HttpUtility.UrlEncode(Convert.ToInt32(TransactionType.ChargeCC).ToString()) + "&";
            sendStr += "TransType=" + HttpUtility.UrlEncode(Convert.ToInt32(TransactionType.Debit).ToString()) + "&";
            sendStr += "TransApprovalID=" + HttpUtility.UrlEncode(refTransID) + "&";

            sendStr += "CardNum="   + HttpUtility.UrlEncode(data.CardNumber) + "&";
            sendStr += "ExpMonth="  + HttpUtility.UrlEncode(data.Month.ToString()) + "&";
            sendStr += "ExpYear="   + HttpUtility.UrlEncode(data.Year.ToString()) + "&";
            sendStr += "Member="    + HttpUtility.UrlEncode(data.CardHolderName.ToString()) + "&";
            //sendStr += "TypeCredit=" + HttpUtility.UrlEncode(((int)TypeCredit.Refund).ToString()) + "&";
            sendStr += "TypeCredit=" + HttpUtility.UrlEncode(((int)TypeCredit.Installments).ToString()) + "&";
            sendStr += "RefTransID=" + HttpUtility.UrlEncode(refTransID) + "&";
            sendStr += "Payments=" + HttpUtility.UrlEncode("1") + "&";            // 1 - for regular transaction
            sendStr += "Amount=" + HttpUtility.UrlEncode(data.Amount.ToString()) + "&";
            sendStr += "Currency=" + HttpUtility.UrlEncode(data.Currency.ToString()) + "&";
            sendStr += "CVV2=" + HttpUtility.UrlEncode(data.Cvv.ToString()) + "&";
            sendStr += "Email=" + HttpUtility.UrlEncode(data.Email) + "&";
            sendStr += "PhoneNumber=" + HttpUtility.UrlEncode(data.Phone) + "&";

            string ipAddress = GetIPAddress();
            ipAddress = " 192.168.1.12";
            sendStr += "ClientIP=" + HttpUtility.UrlEncode(ipAddress) + "&";
            
            sendStr += "BillingAddress1=" + HttpUtility.UrlEncode(data.BillingAddress) + "&";
            sendStr += "BillingCity=" + HttpUtility.UrlEncode(data.City) + "&";
            sendStr += "BillingZipCode=" + HttpUtility.UrlEncode(data.ZipCode) + "&";
            sendStr += "BillingCountry=" + HttpUtility.UrlEncode(data.CountryCode) + "&";

            //Signature 
            string signature = data.CompanyNumber + TransactionType.ChargeCC.ToString() + ((int)TypeCredit.Refund).ToString() +
                               data.Amount.ToString() + data.Currency.ToString() + data.CardNumber + refTransID + data.PersonalHashKey;
            string shaSignature = Signature.GenerateSHA256(signature);
            string encodedTo64 = Signature.EncodeTo64(shaSignature);
            sendStr += "Signature=" + HttpUtility.UrlEncode(encodedTo64);

            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;

            //------------- creating the request
            HttpWebRequest webReq = (HttpWebRequest)WebRequest.Create(sendStr);
            webReq.Method = "GET";
            //------------- checking the response
            try
            {
                HttpWebResponse webRes = (HttpWebResponse)webReq.GetResponse();
                StreamReader sr = new StreamReader(webRes.GetResponseStream());
                String resStr = sr.ReadToEnd();
                TransactionResult transResult = new TransactionResult();
                Response.Write("Response String: " + resStr + "<br />");
            }
            catch (Exception ex)
            {
                Response.Write(ex.Message);
            }
        }